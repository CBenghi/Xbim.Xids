// Enums.generated.cs is automatically generated by xbim.xids.generator.Execute_GenerateIfcMeasureDictionary() using Xbim.Essentials 5.1.341.0
using System;
using System.Collections.Generic;
using System.Text;

namespace Xbim.InformationSpecifications.Helpers
{
    /// <summary>
    /// Determins data type constraints and conversion for measures.
    /// </summary>
    public enum IfcValue
    {
		/// Amount of substance, expressed in mole
		IfcAmountOfSubstanceMeasure,
		/// Area density, expressed in kg / m2
		IfcAreaDensityMeasure,
		/// Area, expressed in square meter
		IfcAreaMeasure,
		/// Dynamic viscosity, expressed in kg / m s
		IfcDynamicViscosityMeasure,
		/// Electric capacitance, expressed in farad
		IfcElectricCapacitanceMeasure,
		/// Electric charge, expressed in coulomb
		IfcElectricChargeMeasure,
		/// Electric conductance, expressed in siemens
		IfcElectricConductanceMeasure,
		/// Electric current, expressed in ampere
		IfcElectricCurrentMeasure,
		/// Electric resistance, expressed in ohm
		IfcElectricResistanceMeasure,
		/// Electric voltage, expressed in volt
		IfcElectricVoltageMeasure,
		/// Energy, expressed in joule
		IfcEnergyMeasure,
		/// Force, expressed in newton
		IfcForceMeasure,
		/// Frequency, expressed in hertz
		IfcFrequencyMeasure,
		/// Heat flux density, expressed in kg / s3
		IfcHeatFluxDensityMeasure,
		/// Heating, expressed in m2 kg / s2 K
		IfcHeatingValueMeasure,
		/// Illuminance, expressed in lux
		IfcIlluminanceMeasure,
		/// Ion concentration measure, expressed in kg / m3
		IfcIonConcentrationMeasure,
		/// Iso thermal moisture capacity, expressed in m3 / kg
		IfcIsothermalMoistureCapacityMeasure,
		/// Length, expressed in meter
		IfcLengthMeasure,
		/// Speed, expressed in m / s
		IfcLinearVelocityMeasure,
		/// Luminous flux, expressed in Lumen
		IfcLuminousFluxMeasure,
		/// Luminous intensity, expressed in candela
		IfcLuminousIntensityMeasure,
		/// Mass density, expressed in kg / m3
		IfcMassDensityMeasure,
		/// Mass flow rate, expressed in kg / s
		IfcMassFlowRateMeasure,
		/// Mass, expressed in kilogram
		IfcMassMeasure,
		/// Mass per length, expressed in kg / m
		IfcMassPerLengthMeasure,
		/// Modulus of elasticity, expressed in kg / m s2
		IfcModulusOfElasticityMeasure,
		/// Moisture diffusivity, expressed in m3 / s
		IfcMoistureDiffusivityMeasure,
		/// Molecular weight, expressed in kg / mol
		IfcMolecularWeightMeasure,
		/// Moment of inertia, expressed in m4
		IfcMomentOfInertiaMeasure,
		/// PH, expressed in 1
		IfcPHMeasure,
		/// Planar force, expressed in kg / m s2
		IfcPlanarForceMeasure,
		/// Angle, expressed in radian
		IfcPlaneAngleMeasure,
		/// Power, expressed in watt
		IfcPowerMeasure,
		/// Pressure, expressed in pascal
		IfcPressureMeasure,
		/// Radio activity, expressed in Becqurel
		IfcRadioActivityMeasure,
		/// Ratio, expressed in Percent
		IfcRatioMeasure,
		/// Rotational frequency, expressed in hertz
		IfcRotationalFrequencyMeasure,
		/// Section modulus, expressed in m3
		IfcSectionModulusMeasure,
		/// Sound power, expressed in decibel
		IfcSoundPowerMeasure,
		/// Sound pressure, expressed in decibel
		IfcSoundPressureMeasure,
		/// Specific heat capacity, expressed in m2 / s2 K
		IfcSpecificHeatCapacityMeasure,
		/// Temperature rate of change, expressed in K / s
		IfcTemperatureRateOfChangeMeasure,
		/// Thermal conductivity, expressed in m kg / s3 K
		IfcThermalConductivityMeasure,
		/// Temperature, expressed in kelvin
		IfcThermodynamicTemperatureMeasure,
		/// Time, expressed in second
		IfcTimeMeasure,
		/// Torque, expressed in m2 kg / s2
		IfcTorqueMeasure,
		/// Vapor permeability, expressed in s
		IfcVaporPermeabilityMeasure,
		/// Volume, expressed in cubic meter
		IfcVolumeMeasure,
		/// Volumetric flow rate, expressed in m3 / s
		IfcVolumetricFlowRateMeasure,
		/// A string,
		IfcText,
		/// An identifier expressed as string,
		IfcIdentifier,

    }
}
